Solti.Utils.Router.Extensions.ModuleRegistration<TModule>
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Action!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute<T, TResult>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Func<T, TResult>!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute<T1, T2, T3, T4, T5, TResult>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Func<T1, T2, T3, T4, T5, TResult>!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute<T1, T2, T3, T4, T5>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Action<T1, T2, T3, T4, T5>!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute<T1, T2, T3, T4, TResult>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Func<T1, T2, T3, T4, TResult>!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute<T1, T2, T3, T4>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Action<T1, T2, T3, T4>!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute<T1, T2, T3, TResult>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Func<T1, T2, T3, TResult>!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute<T1, T2, T3>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Action<T1, T2, T3>!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute<T1, T2, TResult>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Func<T1, T2, TResult>!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute<T1, T2>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Action<T1, T2>!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute<T>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Action<T>!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRoute<TResult>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, System.Func<TResult>!>!>! selector, params string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRouteInternal<TDelegate>(Solti.Utils.Router.ParsedRoute! route, System.Linq.Expressions.Expression<System.Func<TModule, TDelegate!>!>! selector, string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.AddRouteInternal<TDelegate>(string! route, System.Linq.Expressions.Expression<System.Func<TModule, TDelegate!>!>! selector, string![]! methods) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
Solti.Utils.Router.Extensions.ModuleRegistration<TModule>.ModuleRegistration(Solti.Utils.Router.IRouterBuilder! routerBuilder, Solti.Utils.Router.Extensions.RequestHandlerBuilder! handlerBuilder) -> void
Solti.Utils.Router.IRouterBuilder
Solti.Utils.Router.IRouterBuilder.AddRoute(Solti.Utils.Router.ParsedRoute! route, System.Linq.Expressions.LambdaExpression! handlerExpr, params string![]! methods) -> void
static Solti.Utils.Router.Extensions.AsyncRouterBuilderAddRouteExtensions.UseModule<TModule>(this Solti.Utils.Router.AsyncRouterBuilder! self) -> Solti.Utils.Router.Extensions.ModuleRegistration<TModule>!
virtual Solti.Utils.Router.Extensions.RequestHandlerBuilder.CreateFactory(Solti.Utils.Router.ParsedRoute! route, System.Reflection.MethodInfo! invokeServiceMethod, object? userData) -> System.Linq.Expressions.LambdaExpression!
virtual Solti.Utils.Router.Extensions.RequestHandlerBuilder.GetInvokeServiceArgument(System.Reflection.ParameterInfo! param, Solti.Utils.Router.ParsedRoute! route, object? userData) -> System.Linq.Expressions.Expression!
virtual Solti.Utils.Router.Extensions.RequestHandlerBuilder.InvokeService(Solti.Utils.Router.ParsedRoute! route, System.Reflection.MethodInfo! invokeServiceMethod, object? userData) -> System.Linq.Expressions.Expression!