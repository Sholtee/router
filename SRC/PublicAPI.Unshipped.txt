Solti.Utils.Router.ConverterFactory
Solti.Utils.Router.DefaultConverters
Solti.Utils.Router.DefaultRequestHandler
Solti.Utils.Router.IConverter
Solti.Utils.Router.IConverter.ConvertToString(object? input, out string? value) -> bool
Solti.Utils.Router.IConverter.ConvertToValue(string! input, out object? value) -> bool
Solti.Utils.Router.IConverter.Id.get -> string!
Solti.Utils.Router.IConverter.Style.get -> string?
Solti.Utils.Router.RequestHandler
Solti.Utils.Router.Router
Solti.Utils.Router.RouterBuilder
Solti.Utils.Router.RouterBuilder.AddRoute(string! route, Solti.Utils.Router.RequestHandler! handler, params string![]! methods) -> void
Solti.Utils.Router.RouterBuilder.AddRoute(string! route, System.Linq.Expressions.Expression<Solti.Utils.Router.RequestHandler!>! handlerExpr, params string![]! methods) -> void
Solti.Utils.Router.RouterBuilder.Build() -> Solti.Utils.Router.Router!
Solti.Utils.Router.RouterBuilder.DefaultHandler.get -> System.Linq.Expressions.Expression<Solti.Utils.Router.DefaultRequestHandler!>!
Solti.Utils.Router.RouterBuilder.RouterBuilder(Solti.Utils.Router.DefaultRequestHandler! handler, System.Collections.Generic.IReadOnlyDictionary<string!, Solti.Utils.Router.ConverterFactory!>? converters = null) -> void
Solti.Utils.Router.RouterBuilder.RouterBuilder(System.Linq.Expressions.Expression<Solti.Utils.Router.DefaultRequestHandler!>! handlerExpr, System.Collections.Generic.IReadOnlyDictionary<string!, Solti.Utils.Router.ConverterFactory!>? converters = null) -> void
static Solti.Utils.Router.DefaultConverters.Instance.get -> Solti.Utils.Router.DefaultConverters!