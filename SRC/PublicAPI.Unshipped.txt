Solti.Utils.Router.AsyncRouter
Solti.Utils.Router.AsyncRouterBuilder
Solti.Utils.Router.AsyncRouterBuilder.AddRoute<T>(string! route, Solti.Utils.Router.RequestHandler<T>! handler, params string![]! methods) -> void
Solti.Utils.Router.AsyncRouterBuilder.AddRoute<T>(string! route, Solti.Utils.Router.RequestHandler<T>! handler, Solti.Utils.Router.SplitOptions! splitOptions, params string![]! methods) -> void
Solti.Utils.Router.AsyncRouterBuilder.AddRoute<T>(string! route, System.Linq.Expressions.Expression<Solti.Utils.Router.RequestHandler<T>!>! handlerExpr, params string![]! methods) -> void
Solti.Utils.Router.AsyncRouterBuilder.AddRoute<T>(string! route, System.Linq.Expressions.Expression<Solti.Utils.Router.RequestHandler<T>!>! handlerExpr, Solti.Utils.Router.SplitOptions! splitOptions, params string![]! methods) -> void
Solti.Utils.Router.AsyncRouterBuilder.Build() -> Solti.Utils.Router.AsyncRouter!
Solti.Utils.Router.AsyncRouterBuilder.UnderlyingBuilder.get -> Solti.Utils.Router.RouterBuilder!
Solti.Utils.Router.DefaultRequestHandler<TResult>
Solti.Utils.Router.RequestHandler<TResult>
static Solti.Utils.Router.AsyncRouterBuilder.Create(System.Collections.Generic.IReadOnlyDictionary<string!, Solti.Utils.Router.ConverterFactory!>? converters = null) -> Solti.Utils.Router.AsyncRouterBuilder!
static Solti.Utils.Router.AsyncRouterBuilder.Create<T>(Solti.Utils.Router.DefaultRequestHandler<T>! handler, System.Collections.Generic.IReadOnlyDictionary<string!, Solti.Utils.Router.ConverterFactory!>? converters = null) -> Solti.Utils.Router.AsyncRouterBuilder!
static Solti.Utils.Router.AsyncRouterBuilder.Create<T>(System.Linq.Expressions.Expression<Solti.Utils.Router.DefaultRequestHandler<T>!>! handlerExpr, System.Collections.Generic.IReadOnlyDictionary<string!, Solti.Utils.Router.ConverterFactory!>? converters = null) -> Solti.Utils.Router.AsyncRouterBuilder!